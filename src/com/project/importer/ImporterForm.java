/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project.importer;

import com.project.dto.ProductDTO;
import com.project.entity.ProductEntity;
import java.awt.CardLayout;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author seweryn
 */
public class ImporterForm extends javax.swing.JFrame implements 
        ExtractImporterPanel.Listener, TransformImporterPanel.Listener,
        LoadImporterPanel.Listener {

    final static String EXTRACT_PANEL = "EXTRACT_PANEL";
    final static String TRANSFORM_PANEL = "TRANSFORM_PANEL";
    final static String LOAD_PANEL = "LOAD_PANEL";
    
    
    private final CardLayout cardLayout;
    
    /**
     * Creates new form ImporterForm
     */
    public ImporterForm() {
        initComponents();
        cardLayout = (CardLayout)jPanelContent.getLayout(); 
        extractImporterPanel.setParentListener(this);
        transformImporterPanel.setParentListener(this);
        loadImporterPanel.setParentListener(this);
        displayPanel(EXTRACT_PANEL);
    }
    
    private void displayPanel(String panelName){
        cardLayout.show(jPanelContent, panelName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelContent = new javax.swing.JPanel();
        extractImporterPanel = new com.project.importer.ExtractImporterPanel();
        loadImporterPanel = new com.project.importer.LoadImporterPanel();
        transformImporterPanel = new com.project.importer.TransformImporterPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(600, 400));
        setType(java.awt.Window.Type.POPUP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanelContent.setLayout(new java.awt.CardLayout());
        jPanelContent.add(extractImporterPanel, "EXTRACT_PANEL");

        javax.swing.GroupLayout loadImporterPanelLayout = new javax.swing.GroupLayout(loadImporterPanel);
        loadImporterPanel.setLayout(loadImporterPanelLayout);
        loadImporterPanelLayout.setHorizontalGroup(
            loadImporterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
        );
        loadImporterPanelLayout.setVerticalGroup(
            loadImporterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jPanelContent.add(loadImporterPanel, "LOAD_PANEL");

        javax.swing.GroupLayout transformImporterPanelLayout = new javax.swing.GroupLayout(transformImporterPanel);
        transformImporterPanel.setLayout(transformImporterPanelLayout);
        transformImporterPanelLayout.setHorizontalGroup(
            transformImporterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
        );
        transformImporterPanelLayout.setVerticalGroup(
            transformImporterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jPanelContent.add(transformImporterPanel, "TRANSFORM_PANEL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jPanelContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void displayException(Throwable ex){
        ex.printStackTrace();
        JOptionPane.showMessageDialog( this,
            ex.getMessage(),
            ex.getClass().getSimpleName(), 
            JOptionPane.ERROR_MESSAGE); 
        this.processWindowEvent( new WindowEvent( this, WindowEvent.WINDOW_CLOSING));
    }
     
    @Override
    public void onExtractSuccess( ProductDTO productDTO ){
        transformImporterPanel.displayProduct(productDTO);
        displayPanel(TRANSFORM_PANEL);
    }
    
    @Override
    public void onTransformSuccess( ProductEntity productEntity ){
        loadImporterPanel.displayProduct(productEntity);
        displayPanel(LOAD_PANEL);
    }
    
    @Override
    public void onLoadSuccess(){
        dispose();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.project.importer.ExtractImporterPanel extractImporterPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelContent;
    private com.project.importer.LoadImporterPanel loadImporterPanel;
    private com.project.importer.TransformImporterPanel transformImporterPanel;
    // End of variables declaration//GEN-END:variables
}
